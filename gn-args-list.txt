action_pool_depth
    Current value (from the default) = -1
      From //build/toolchain/BUILD.gn:10

    Pool for non goma tasks.

aec_untrusted_delay_for_testing
    Current value (from the default) = false
      From //third_party/webrtc/modules/audio_processing/BUILD.gn:19

    Disables the usual mode where we trust the reported system delay
    values the AEC receives. The corresponding define is set appropriately
    in the code, but it can be force-enabled here for testing.

allow_critical_memory_pressure_handling_in_foreground
    Current value (from the default) = false
      From //content/common/features.gni:13

    Whether to perform critical memory pressure handling when in foreground (if
    false, critical memory pressure is treated like moderate pressure in foreground).

alternate_cdm_storage_id_key
    Current value (from the default) = ""
      From //media/media_options.gni:160

    If |enable_cdm_storage_id| is set, then an implementation specific key
    must also be provided. It can be provided by defining CDM_STORAGE_ID_KEY
    (which takes precedence), or by setting |alternate_cdm_storage_id_key|.
    The key must be a string of at least 32 characters.

android_channel
    Current value (from the default) = "default"
      From //chrome/android/channel.gni:8

    The channel to build on Android: stable, beta, dev, canary, work, or
    default. "default" should be used on non-official builds.

android_full_debug
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:48

    Normally, Android builds are lightly optimized, even for debug builds, to
    keep binary size down. Setting this flag to true disables such optimization

angle_64bit_current_cpu
    Current value (from the default) = false
      From //third_party/angle/gni/angle.gni:35

angle_enable_d3d11
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:59

angle_enable_d3d9
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:58

angle_enable_essl
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:65

angle_enable_gl
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:60

angle_enable_gl_null
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:70

angle_enable_glsl
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:66

angle_enable_hlsl
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:71

angle_enable_null
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:64

angle_enable_vulkan
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:62

angle_enable_vulkan_validation_layers
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:75

angle_libs_suffix
    Current value (from the default) = ""
      From //third_party/angle/gni/angle.gni:54

angle_link_glx
    Current value (from the default) = false
      From //third_party/angle/BUILD.gn:22

    Link in system libGL, to work with apitrace.  See doc/DebuggingTips.md.

angle_shared_libvulkan
    Current value (from the default) = false
      From //third_party/angle/gni/angle.gni:53

apm_debug_dump
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:72

    Selects whether debug dumps for the audio processing module
    should be generated.

asan_globals
    Current value (from the default) = true
      From //build/config/sanitizers/sanitizers.gni:157

    Detect overflow/underflow for global objects.
   
    Mac: http://crbug.com/352073

auto_profile_path
    Current value (from the default) = ""
      From //build/config/compiler/BUILD.gn:92

    AFDO (Automatic Feedback Directed Optimizer) is a form of profile-guided
    optimization that GCC supports. It used by ChromeOS in their official
    builds. To use it, set auto_profile_path to the path to a file containing
    the needed gcov profiling data.

binutils_path
    Current value (from the default) = "../../third_party/binutils/Linux_x64/Release/bin"
      From //build/config/compiler/BUILD.gn:57

blink_gc_plugin
    Current value (from the default) = true
      From //third_party/blink/renderer/BUILD.gn:17

    Set to true to enable the clang plugin that checks the usage of the  Blink
    garbage-collection infrastructure during compilation.

blink_gc_plugin_option_do_dump_graph
    Current value (from the default) = false
      From //third_party/blink/renderer/BUILD.gn:21

    Set to true to have the clang Blink GC plugin emit class graph (in JSON)
    with typed pointer edges; for debugging or other (internal) uses.

blink_gc_plugin_option_warn_trace_wrappers_missing_base_dispatch
    Current value (from the default) = false
      From //third_party/blink/renderer/BUILD.gn:30

    Set to true to have the clang Blink GC plugin additionally check if a
    TraceWrappers method also dispatches to all its base classes.

blink_gc_plugin_option_warn_unneeded_finalizer
    Current value (from the default) = false
      From //third_party/blink/renderer/BUILD.gn:26

    Set to true to have the clang Blink GC plugin additionally check if
    a class has an empty destructor which would be unnecessarily invoked
    when finalized.

blink_symbol_level
    Current value (from the default) = -1
      From //third_party/blink/renderer/config.gni:32

    How many symbols to include in the build of blink. This affects
    the performance of the build since the symbols are large and dealing with
    them is slow.
      2 means regular build with symbols.
      1 means minimal symbols, usually enough for backtraces only. Symbols with
    internal linkage (static functions or those in anonymous namespaces) may not
    appear when using this level.
      0 means no symbols.
      -1 means auto-set according to debug/release and platform.

build_angle_deqp_tests
    Current value (from the default) = false
      From //third_party/angle/src/tests/BUILD.gn:19

    Don't build dEQP by default.

build_angle_gles1_conform_tests
    Current value (from the default) = false
      From //third_party/angle/src/tests/BUILD.gn:20

build_devil_arm_deps
    Current value (from the default) = false
      From //build/secondary/third_party/catapult/devil/devil_arm.gni:8

    Whether to build Devil host dependencies for Linux arm, e.g. for use on
    Raspberry Pis.

build_display_configuration
    Current value (from the default) = false
      From //ui/display/display.gni:7

    Build Chrome OS display configuration code.

build_libsrtp_tests
    Current value (from the default) = false
      From //third_party/libsrtp/BUILD.gn:10

    Tests may not be appropriate for some build environments, e.g. Windows.
    Rather than enumerate valid options, we just let clients ask for them.

build_sfntly_samples
    Current value (from the default) = false
      From //third_party/sfntly/BUILD.gn:9

    Flip to true to build sfntly sample programs.

build_with_mozilla
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:87

    Enable to use the Mozilla internal settings.

cc_wrapper
    Current value (from the default) = ""
      From //build/toolchain/cc_wrapper.gni:36

    Set to "ccache", "icecc" or "distcc".  Probably doesn't work on windows.

chrome_pgo_phase
    Current value (from the default) = 0
      From //build/config/compiler/pgo/pgo.gni:13

    Specify the current PGO phase.
    Here's the different values that can be used:
        0 : Means that PGO is turned off.
        1 : Used during the PGI (instrumentation) phase.
        2 : Used during the PGO (optimization) phase.
   
    TODO(sebmarchand): Add support for the PGU (update) phase.

clang_base_path
    Current value (from the default) = "//third_party/llvm-build/Release+Asserts"
      From //build/config/clang/clang.gni:14

clang_sample_profile_path
    Current value (from the default) = ""
      From //build/config/compiler/BUILD.gn:109

    Path to an AFDO profile to use while building with clang, if any. Empty
    implies none.

clang_use_chrome_plugins
    Current value (from the default) = true
      From //build/config/clang/clang.gni:12

    Indicates if the build should use the Chrome-specific plugins for enforcing
    coding guidelines, etc. Only used when compiling with Clang.

clang_use_default_sample_profile
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:117

    Some configurations have default sample profiles. If this is true and
    clang_sample_profile_path is empty, we'll fall back to the default.
   
    We currently only have default profiles for Chromium in-tree, so we disable
    this by default for all downstream projects, since these profiles are likely
    nonsensical for said projects.

clang_version
    Current value (from the default) = "7.0.0"
      From //build/toolchain/toolchain.gni:51

    Clang compiler version. Clang files are placed at version-dependent paths.

closure_compile
    Current value (from the default) = false
      From //ui/webui/webui_features.gni:14

    Enable closure type-checking for Chrome's web technology-based UI. This
    enables the webui_closure_compile target which does a no-op without this
    flag enabled. Requires Java.

com_init_check_hook_disabled
    Current value (from the default) = false
      From //base/BUILD.gn:52

    Set to true to disable COM init check hooks.

compiler_timing
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:121

    Turn this on to have the compiler output extra timing information.

compute_inputs_for_analyze
    Current value (from the default) = false
      From //build/config/compute_inputs_for_analyze.gni:13

    Enable this flag when running "gn analyze".
   
    This causes some gn actions to compute inputs immediately (via exec_script)
    where they would normally compute them only when executed (and write them to
    a depfile).
   
    This flag will slow down GN, but is required for analyze to work properly.

concurrent_links
    Current value (from the default) = -1
      From //build/toolchain/concurrent_links.gni:19

    Limit the number of concurrent links; we often want to run fewer
    links at once than we do compiles, because linking is memory-intensive.
    The default to use varies by platform and by the amount of memory
    available, so we call out to a script to get the right value.

content_shell_product_name
    Current value (from the default) = "Content Shell"
      From //content/shell/BUILD.gn:28

content_shell_version
    Current value (from the default) = "99.77.34.5"
      From //content/shell/BUILD.gn:29

crashpad_dependencies
    Current value = "chromium"
      From //.gn:69
    Overridden from the default = "standalone"
      From //third_party/crashpad/crashpad/build/crashpad_buildconfig.gni:19

    Determines various flavors of build configuration, and which concrete
    targets to use for dependencies. Valid values are "standalone", "chromium",
    and "fuchsia".

current_cpu
    Current value (from the default) = ""
      (Internally set; try `gn help current_cpu`.)

current_os
    Current value (from the default) = ""
      (Internally set; try `gn help current_os`.)

custom_toolchain
    Current value (from the default) = ""
      From //build/config/BUILDCONFIG.gn:144

    Allows the path to a custom target toolchain to be injected as a single
    argument, and set as the default toolchain.

dcheck_always_on
    Current value (from the default) = false
      From //build/config/dcheck_always_on.gni:14

    Set to true to enable dcheck in Release builds.

dcheck_is_configurable
    Current value (from the default) = false
      From //build/config/dcheck_always_on.gni:9

    Enables DCHECKs to be built-in, but to default to being non-fatal/log-only.
    DCHECKS can then be set as fatal/non-fatal via the DCheckIsFatal feature.
    See crbug.com/596231 for details on how this is used.

debug_devtools
    Current value (from the default) = false
      From //third_party/blink/public/public_features.gni:12

    If debug_devtools is set to true, JavaScript files for DevTools are stored
    as is and loaded from disk. Otherwise, a concatenated file is stored in
    resources.pak. It is still possible to load JS files from disk by passing
    --debug-devtools cmdline switch.

disable_brotli_filter
    Current value (from the default) = false
      From //net/features.gni:27

    Do not disable brotli filter by default.

disable_file_support
    Current value (from the default) = false
      From //net/features.gni:12

    Disables support for file URLs.  File URL support requires use of icu.

disable_ftp_support
    Current value (from the default) = false
      From //net/features.gni:17

disable_libfuzzer
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:92

    Helper variable for testing builds with disabled libfuzzer.
    Not for client use.

enable_ac3_eac3_audio_demuxing
    Current value (from the default) = false
      From //media/media_options.gni:56

    Enables AC3/EAC3 audio demuxing. This is enabled only on Chromecast, since
    it only provides demuxing, and is only useful for AC3/EAC3 audio
    pass-through to HDMI sink on Chromecast.

enable_app_list
    Current value (from the default) = false
      From //chrome/common/features.gni:23

enable_app_shell_installer
    Current value (from the default) = false
      From //extensions/shell/installer/BUILD.gn:15

enable_arcore
    Current value (from the default) = false
      From //device/vr/buildflags/buildflags.gni:45

    TODO(crbug.com/841389): We should eventually have a single flag for
    enabling arcore, but we currently don't support ARCore in 64bit, and we do
    not support all channels. This flag governs the inclusion of code that must
    be identical across configs.

enable_av1_decoder
    Current value (from the default) = true
      From //third_party/libaom/options.gni:5

    Enable decoding AV1 video files.

enable_background_contents
    Current value (from the default) = true
      From //chrome/common/features.gni:26

    Enables support for background apps.

enable_background_mode
    Current value (from the default) = true
      From //chrome/common/features.gni:27

enable_basic_print_dialog
    Current value (from the default) = true
      From //chrome/common/features.gni:31

    Enable the printing system dialog for platforms that support printing
    and have a system dialog.

enable_basic_printing
    Current value (from the default) = true
      From //printing/buildflags/buildflags.gni:10

    Enable basic printing support and UI.

enable_blink_heap_incremental_marking
    Current value (from the default) = true
      From //third_party/blink/renderer/platform/heap/BUILD.gn:15

    Build Blink with incremental marking infrastructure for Oilpan.
   
    To turn on incremental marking also use
      --enable-blink-features=HeapIncrementalMarking

enable_blink_heap_verification
    Current value (from the default) = false
      From //third_party/blink/renderer/platform/heap/BUILD.gn:18

    Enables heap verification.

enable_callgrind
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:57

    Enable callgrind for performance profiling

enable_captive_portal_detection
    Current value (from the default) = true
      From //chrome/common/features.gni:33

enable_cbcs_encryption_scheme
    Current value (from the default) = true
      From //media/media_options.gni:65

    Enable parsing for the 'cbcs' encryption scheme added by MPEG Common
    Encryption 3rd Edition (ISO/IEC 23001-7), published 02/15/2016.

enable_cdm_host_verification
    Current value (from the default) = false
      From //media/media_options.gni:149

enable_cdm_storage_id
    Current value (from the default) = false
      From //media/media_options.gni:153

    Enable Storage ID which is used by CDMs. This is only available with chrome
    branding, but may be overridden by other embedders.

enable_cros_assistant
    Current value (from the default) = false
      From //chromeos/assistant/assistant.gni:4

    Enable assistant features. Assistant related code is compiled only when
    true. The default assistant implementation is a stub.

enable_cros_libassistant
    Current value (from the default) = false
      From //chromeos/assistant/assistant.gni:8

    Enable assistant implementation based on libassistant. This requires
    enable_cros_assistant also enabled.

enable_cros_libassistant_so
    Current value (from the default) = false
      From //chromeos/assistant/assistant.gni:12

    Enable building libassistant.so shared library from local checkout. This is
    for development purposes only.

enable_debugallocation
    Current value (from the default) = true
      From //base/allocator/BUILD.gn:13

    Provide a way to force disable debugallocation in Debug builds,
    e.g. for profiling (it's more rare to profile Debug builds,
    but people sometimes need to do that).

enable_desktop_in_product_help
    Current value (from the default) = true
      From //components/feature_engagement/features.gni:9

    In-Product Help is only available in Windows and Linux OS for
    desktop. Other platforms such as Mac OS currently does not support
    Views and there have been no strong feelings about CrOS.

enable_dolby_vision_demuxing
    Current value (from the default) = false
      From //media/media_options.gni:74

    Enable Dolby Vision demuxing. Enable by default for Chromecast. Actual
    decoding must be provided by the platform. Note some Dolby Vision profiles
    which are encoded using HEVC require |enable_hevc_demuxing| to be enabled.

enable_extensions
    Current value (from the default) = true
      From //extensions/buildflags/buildflags.gni:8

enable_feed_in_chrome
    Current value (from the default) = false
      From //components/feed/features.gni:6

enable_ffmpeg_video_decoders
    Current value (from the default) = true
      From //media/media_options.gni:118

    On Android, FFMpeg is built without video decoders by default.
    This flag gives the option to override that decision in case there are no
    hardware decoders. To do so, you will also need to update ffmpeg build files
    in order to define which decoders to build in.

enable_full_stack_frames_for_profiling
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:65

    Compile in such a way as to make it possible for the profiler to unwind full
    stack frames. Setting this flag has a large effect on the performance of the
    generated code than just setting profiling, but gives the profiler more
    information to analyze.
    Requires profiling to be set to true.

enable_google_now
    Current value (from the default) = false
      From //chrome/common/features.gni:37

    Google Now is disabled to prepare for its removal.
    http://crbug.com/539674

enable_gvr_services
    Current value (from the default) = false
      From //device/vr/buildflags/buildflags.gni:13

    TODO(733935): Enable for other Android architectures too. Currently we only
    support arm and arm64.

enable_hangout_services_extension
    Current value (from the default) = false
      From //chrome/common/features.gni:41

    Hangout services is an extension that adds extra features to Hangouts.
    It is enableable separately to facilitate testing.

enable_hevc_demuxing
    Current value (from the default) = false
      From //media/media_options.gni:69

    Enable HEVC/H265 demuxing. Actual decoding must be provided by the
    platform. Enable by default for Chromecast.

enable_hls_sample_aes
    Current value (from the default) = false
      From //media/media_options.gni:77

    Enable HLS with SAMPLE-AES decryption.

enable_internal_app_remoting_targets
    Current value (from the default) = false
      From //remoting/remoting_options.gni:18

    Set this to enable building internal AppRemoting apps.

enable_ipc_fuzzer
    Current value (from the default) = false
      From //tools/ipc_fuzzer/ipc_fuzzer.gni:15

enable_ipc_logging
    Current value (from the default) = true
      From //ipc/features.gni:7

    Enabling debug builds automatically sets enable_ipc_logging to true.

enable_iterator_debugging
    Current value (from the default) = true
      From //build/config/BUILD.gn:36

    When set (the default) enables C++ iterator debugging in debug builds.
    Iterator debugging is always off in release builds (technically, this flag
    affects the "debug" config, which is always available but applied by
    default only in debug builds).
   
    Iterator debugging is generally useful for catching bugs. But it can
    introduce extra locking to check the state of an iterator against the state
    of the current object. For iterator- and thread-heavy code, this can
    significantly slow execution.

enable_linux_installer
    Current value (from the default) = false
      From //chrome/installer/BUILD.gn:11

enable_location_source
    Current value (from the default) = true
      From //base/BUILD.gn:44

    Indicates if the Location object contains the source code information
    (file, function, line). False means only the program counter (and currently
    file name) is saved.

enable_mdns
    Current value (from the default) = true
      From //net/features.gni:30

    Multicast DNS.

enable_media_remoting
    Current value (from the default) = true
      From //media/media_options.gni:244

    This switch defines whether the Media Remoting implementation will be built.
    When enabled, media is allowed to be renderer and played back on remote
    devices when the tab is being casted and other conditions are met.

enable_media_remoting_rpc
    Current value (from the default) = true
      From //media/media_options.gni:250

    Media Remoting RPC is disabled on Android since it's unused but increases
    the native binary size by ~70Kb.

enable_media_router_jscompile
    Current value (from the default) = false
      From //chrome/browser/resources/media_router/extension/BUILD.gn:12

    Determines whether JSCompiler should be used to typecheck
    JavaScript code for the Media Router extension.

enable_message_center
    Current value (from the default) = true
      From //ui/base/ui_features.gni:18

    Whether the message center should be included for displaying notifications.

enable_mojo_media
    Current value (from the default) = true
      From //media/media_options.gni:132

enable_mojo_tracing
    Current value (from the default) = false
      From //mojo/public/cpp/bindings/BUILD.gn:10

enable_mojom_message_id_scrambling
    Current value (from the default) = true
      From //mojo/public/tools/bindings/mojom.gni:33

    Controls message ID scrambling behavior. If |true|, message IDs are
    scrambled (i.e. randomized based on the contents of //chrome/VERSION) on
    non-Chrome OS desktop platforms. Set to |false| to disable message ID
    scrambling on all platforms.

enable_mojom_typemapping
    Current value (from the default) = true
      From //mojo/public/tools/bindings/mojom.gni:27

    Indicates whether typemapping should be supported in this build
    configuration. This may be disabled when building external projects which
    depend on //mojo but which do not need/want all of the Chromium tree
    dependencies that come with typemapping.
   
    Note that (perhaps obviously) a huge amount of Chromium code will not build
    with typemapping disabled, so it is never valid to set this to |false| in
    any Chromium build configuration.

enable_mpeg_h_audio_demuxing
    Current value (from the default) = false
      From //media/media_options.gni:58

enable_mse_mpeg2ts_stream_parser
    Current value (from the default) = false
      From //media/media_options.gni:61

enable_mus
    Current value (from the default) = false
      From //ui/base/ui_features.gni:21

    Set to true to if mus (aka the window service) is enabled.

enable_mutex_priority_inheritance
    Current value (from the default) = false
      From //base/BUILD.gn:57

    Set to true to enable mutex priority inheritance. See the comments in
    LockImpl::PriorityInheritanceAvailable() in lock_impl_posix.cc for the
    platform requirements to safely enable priority inheritance.

enable_nacl
    Current value = false
      From //out/debug/args.gn:4
    Overridden from the default = true
      From //components/nacl/features.gni:13

enable_nacl_nonsfi
    Current value (from the default) = true
      From //components/nacl/features.gni:18

    Non-SFI is not yet supported on mipsel

enable_native_notifications
    Current value (from the default) = true
      From //chrome/common/features.gni:44

    Enables usage of the system-provided notification center.

enable_native_window_nav_buttons
    Current value (from the default) = false
      From //ui/views/features.gni:12

enable_net_mojo
    Current value (from the default) = true
      From //net/features.gni:45

enable_nocompile_tests
    Current value (from the default) = false
      From //build/nocompile.gni:63

enable_oculus_vr
    Current value (from the default) = false
      From //device/vr/buildflags/buildflags.gni:20

    To build with Oculus support, the Oculus SDK for Windows will need to be
    installed in third_party/libovr/src.  See
    third_party/libovr/README.chromium for details.

enable_offline_pages
    Current value (from the default) = false
      From //components/offline_pages/buildflags/features.gni:8

    Whether to enable OfflinePages support. Currently user-visible features
    are Android-only.

enable_offline_pages_harness
    Current value (from the default) = false
      From //components/offline_pages/buildflags/features.gni:12

    This enables test API for locally-built harness which is used for quality
    evaluations. Requires setting this variable manually at local environment.

enable_one_click_signin
    Current value (from the default) = true
      From //chrome/common/features.gni:48

enable_openvr
    Current value (from the default) = true
      From //device/vr/buildflags/buildflags.gni:15

enable_pdf
    Current value (from the default) = true
      From //pdf/features.gni:12

enable_plugins
    Current value (from the default) = true
      From //ppapi/buildflags/buildflags.gni:10

enable_precompiled_headers
    Current value (from the default) = true
      From //build/config/pch.gni:11

    Precompiled header file support is by default available,
    but for distributed build system uses (like goma) or when
    doing official builds.

enable_print_preview
    Current value (from the default) = true
      From //printing/buildflags/buildflags.gni:16

    Enable printing with print preview. It implies enable_basic_printing.
    Note: It would be convenient to not repeat many of the same conditions in
    enable_basic_printing below. However, GN does not allow the use of
    enable_basic_printing within the same declare_args() block.

enable_profiling
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:30

    Compile in such a way as to enable profiling of the generated code. For
    example, don't omit the frame pointer and leave in symbols.

enable_reading_list
    Current value (from the default) = true
      From //components/reading_list/features/reading_list.gni:8

    Controls whether reading list support is active or not. Currently only
    supported on iOS (on other platforms, the feature is always disabled).

enable_remoting
    Current value (from the default) = true
      From //remoting/remoting_enable.gni:12

enable_remoting_jscompile
    Current value (from the default) = false
      From //remoting/remoting_options.gni:15

    Set this to run the jscompile checks after building the webapp.

enable_reporting
    Current value (from the default) = true
      From //net/features.gni:33

    Reporting not used on iOS.

enable_resource_whitelist_generation
    Current value (from the default) = false
      From //build/config/android/config.gni:373

    Enables used resource whitelist generation. Set for official builds only
    as a large amount of build output is generated.

enable_runtime_media_renderer_selection
    Current value (from the default) = false
      From //media/media_options.gni:144

    When enabled, this feature allows developers to use a runtime flag to
    choose the implementation of the renderer that is used. On a build which
    enables the mojo renderer, if --disable-mojo-renderer is passed at start-up,
    the "default" renderer will be used instead. Both renderer implementations
    will be linked if this feature is enabled, increasing the binary size. This
    feature does not make sense if the mojo renderer is not enabled.

enable_service_discovery
    Current value (from the default) = true
      From //chrome/common/features.gni:50

enable_session_service
    Current value (from the default) = true
      From //chrome/common/features.gni:54

    Enables use of the session service, which is enabled by default.
    Android stores them separately on the Java side.

enable_supervised_users
    Current value (from the default) = true
      From //chrome/common/features.gni:56

enable_swiftshader
    Current value (from the default) = true
      From //ui/gl/BUILD.gn:15

enable_test_mojo_media_client
    Current value (from the default) = false
      From //media/media_options.gni:136

    Enable the TestMojoMediaClient to be used in mojo MediaService. This is for
    testing only and will override the default platform MojoMediaClient, if any.

enable_vr
    Current value (from the default) = true
      From //device/vr/buildflags/buildflags.gni:28

enable_vulkan
    Current value (from the default) = false
      From //gpu/vulkan/features.gni:11

    Enable experimental vulkan backend.

enable_wayland_server
    Current value (from the default) = false
      From //chrome/common/features.gni:59

    Indicates if Wayland display server support is enabled.

enable_websockets
    Current value (from the default) = true
      From //net/features.gni:16

    WebSockets and socket stream code are not used on iOS and are optional in
    cronet.

enable_widevine
    Current value (from the default) = false
      From //third_party/widevine/cdm/widevine.gni:10

    Allow Widevine key system support in Chromium.

enable_wifi_display
    Current value (from the default) = false
      From //extensions/buildflags/buildflags.gni:12

    Enables Wi-Fi Display functionality
    WARNING: This enables MPEG Transport Stream (MPEG-TS) encoding!

fatal_linker_warnings
    Current value (from the default) = true
      From //build/config/compiler/BUILD.gn:81

    Enable fatal linker warnings. Building Chromium with certain versions
    of binutils can cause linker warning.
    See: https://bugs.chromium.org/p/chromium/issues/detail?id=457359

ffmpeg_branding
    Current value (from the default) = "Chromium"
      From //third_party/ffmpeg/ffmpeg_options.gni:34

    Controls whether we build the Chromium or Google Chrome version of FFmpeg.
    The Google Chrome version contains additional codecs. Typical values are
    Chromium, Chrome, and ChromeOS.

ffmpeg_use_atomics_fallback
    Current value (from the default) = false
      From //third_party/ffmpeg/ffmpeg_options.gni:51

    Set to true to force the use of ffmpeg's stdatomic fallback code.
   
    Windows and GCC prior to 4.9 lack stdatomic.h.
   
    This is also useful for developers who use icecc, which relies upon
    clang's -frewrite-includes flag which is broken with #include_next
    directives as used in chromium's clang stdatomic.h.
    Some background: https://bugs.llvm.org/show_bug.cgi?id=26828

fieldtrial_testing_like_official_build
    Current value (from the default) = false
      From //build/config/features.gni:46

    Set to true make a build that disables activation of field trial tests
    specified in testing/variations/fieldtrial_testing_config_*.json.
    Note: this setting is ignored if is_chrome_branded.

full_wpo_on_official
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:156

generate_linker_map
    Current value (from the default) = false
      From //build/toolchain/toolchain.gni:28

    Used for binary size analysis.
    Currently disabled on LLD because of a bug (fixed upstream).
    See https://crbug.com/716209.

generate_order_files
    Current value (from the default) = false
      From //build/config/chrome_build.gni:17

    Turn this on to generate order files. See
    https://chromium.googlesource.com/chromium/src/+/master/docs/win_order_files.md

gold_path
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:69

    When we are going to use gold we need to find it.
    This is initialized below, after use_gold might have been overridden.

goma_dir
    Current value (from the default) = "C:\src\goma\goma-win64"
      From //build/toolchain/goma.gni:14

    Absolute directory containing the gomacc.exe binary.

google_api_key
    Current value (from the default) = ""
      From //google_apis/BUILD.gn:46

    Set these to bake the specified API keys and OAuth client
    IDs/secrets into your build.
   
    If you create a build without values baked in, you can instead
    set environment variables to provide the keys at runtime (see
    src/google_apis/google_api_keys.h for details).  Features that
    require server-side APIs may fail to work if no keys are
    provided.
   
    Note that if you are building an official build or if
    use_official_google_api_keys has been set to trie (explicitly or
    implicitly), these values will be ignored and the official
    keys will be used instead.

google_default_client_id
    Current value (from the default) = ""
      From //google_apis/BUILD.gn:49

    See google_api_key.

google_default_client_secret
    Current value (from the default) = ""
      From //google_apis/BUILD.gn:52

    See google_api_key.

gtest_enable_absl_printers
    Current value (from the default) = false
      From //third_party/googletest/BUILD.gn:9

    If true, it assumes that //third_party/abseil-cpp is an available dependency.

has_native_accessibility
    Current value (from the default) = true
      From //ui/base/ui_features.gni:15

    Whether the platform provides a native accessibility toolkit.

headless_fontconfig_utils
    Current value (from the default) = false
      From //headless/headless.gni:10

    Provide bindings for font loading for headless embedders.

headless_use_embedded_resources
    Current value (from the default) = false
      From //headless/headless.gni:7

    Embed resource.pak file into the binary for easier distribution.

host_byteorder
    Current value (from the default) = "undefined"
      From //build/config/host_byteorder.gni:9

host_cpu
    Current value (from the default) = "x64"
      (Internally set; try `gn help host_cpu`.)

host_os
    Current value (from the default) = "win"
      (Internally set; try `gn help host_os`.)

host_pkg_config
    Current value (from the default) = ""
      From //build/config/linux/pkg_config.gni:36

    A optional pkg-config wrapper to use for tools built on the host.

host_toolchain
    Current value (from the default) = ""
      From //build/config/BUILDCONFIG.gn:148

    This should not normally be set as a build argument.  It's here so that
    every toolchain can pass through the "global" value via toolchain_args().

icu_use_data_file
    Current value (from the default) = true
      From //third_party/icu/config.gni:15

    Tells icu to load an external data file rather than rely on the icudata
    being linked directly into the binary.
   
    This flag is a bit confusing. As of this writing, icu.gyp set the value to
    0 but common.gypi sets the value to 1 for most platforms (and the 1 takes
    precedence).
   
    TODO(GYP) We'll probably need to enhance this logic to set the value to
    true or false in similar circumstances.

ignore_elf32_limitations
    Current value (from the default) = false
      From //build_overrides/build.gni:39

    Android 32-bit non-component, non-clang builds cannot have symbol_level=2
    due to 4GiB file size limit, see https://crbug.com/648948.
    Set this flag to true to skip the assertion.

include_transport_security_state_preload_list
    Current value (from the default) = true
      From //net/features.gni:41

    Includes the transport security state preload list. This list includes
    mechanisms (e.g. HSTS, HPKP) to enforce trusted connections to a significant
    set of hardcoded domains. While this list has a several hundred KB of binary
    size footprint, this flag should not be disabled unless the embedder is
    willing to take the responsibility to make sure that all important
    connections use HTTPS.

include_vr_data
    Current value (from the default) = false
      From //device/vr/buildflags/buildflags.gni:32

    Whether to include VR extras like test APKs in non-VR-specific targets

internal_gles2_conform_tests
    Current value (from the default) = false
      From //gpu/gles2_conform_support/BUILD.gn:7

    Set to true to compile with the OpenGL ES 2.0 conformance tests.

internal_khronos_glcts_tests
    Current value (from the default) = false
      From //gpu/khronos_glcts_support/BUILD.gn:8

ios_deployment_target
    Current value (from the default) = "10.0"
      From //build/config/ios/ios_sdk_overrides.gni:10

    Version of iOS that we're targeting.

is_asan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:12

    Compile for Address Sanitizer to find memory bugs.

is_cast_audio_only
    Current value (from the default) = false
      From //build/config/chromecast_build.gni:14

    Set this true for an audio-only Chromecast build.

is_cast_desktop_build
    Current value (from the default) = false
      From //build/config/chromecast_build.gni:26

    True if Chromecast build is targeted for linux desktop. This type of build
    is useful for testing and development, but currently supports only a subset
    of Cast functionality. Though this defaults to true for x86 Linux devices,
    this should be overriden manually for an embedded x86 build.
    TODO(slan): Remove instances of this when x86 is a fully supported platform.

is_cast_using_cma_backend
    Current value (from the default) = true
      From //media/media_options.gni:80

    If true, use cast CMA backend instead of default chromium media pipeline.

is_cfi
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:54

    Compile with Control Flow Integrity to protect virtual calls and casts.
    See http://clang.llvm.org/docs/ControlFlowIntegrity.html
   
    TODO(pcc): Remove this flag if/when CFI is enabled in all official builds.

is_chrome_branded
    Current value (from the default) = false
      From //build/config/chrome_build.gni:9

    Select the desired branding flavor. False means normal Chromium branding,
    true means official Google Chrome branding (requires extra Google-internal
    resources).

is_chromecast
    Current value (from the default) = false
      From //build/config/chromecast_build.gni:11

    Set this true for a Chromecast build. Chromecast builds are supported on
    Linux and Android.

is_clang
    Current value (from the default) = true
      From //build/config/BUILDCONFIG.gn:137

    Set to true when compiling with the Clang compiler.

is_component_build
    Current value = true
      From //out/debug/args.gn:3
    Overridden from the default = true
      From //build/config/BUILDCONFIG.gn:165

    Component build. Setting to true compiles targets declared as "components"
    as shared libraries loaded dynamically. This speeds up development time.
    When false, components will be linked statically.
   
    For more information see
    https://chromium.googlesource.com/chromium/src/+/master/docs/component_build.md

is_component_ffmpeg
    Current value (from the default) = true
      From //third_party/ffmpeg/ffmpeg_options.gni:41

    Set true to build ffmpeg as a shared library. NOTE: this means we should
    always consult is_component_ffmpeg instead of is_component_build for
    ffmpeg targets. This helps linux chromium packagers that swap out our
    ffmpeg.so with their own. See discussion here
    https://groups.google.com/a/chromium.org/forum/#!msg/chromium-packagers/R5rcZXWxBEQ/B6k0zzmJbvcJ

is_debug
    Current value (from the default) = true
      From //build/config/BUILDCONFIG.gn:155

    Debug build. Enabling official builds automatically sets is_debug to false.

is_desktop_linux
    Current value (from the default) = false
      From //build/config/BUILDCONFIG.gn:134

    Whether we're a traditional desktop unix.

is_lsan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:15

    Compile for Leak Sanitizer to find leaks.

is_msan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:18

    Compile for Memory Sanitizer to find uninitialized reads.

is_multi_dll_chrome
    Current value (from the default) = false
      From //build/config/chrome_build.gni:13

    Break chrome.dll into multple pieces based on process type. Only available
    on Windows.

is_nacl_glibc
    Current value (from the default) = false
      From //build/config/nacl/config.gni:9

    Native Client supports both Newlib and Glibc C libraries where Newlib
    is assumed to be the default one; use this to determine whether Glibc
    is being used instead.

is_official_build
    Current value (from the default) = false
      From //build/config/BUILDCONFIG.gn:131

    Set to enable the official build level of optimization. This has nothing
    to do with branding, but enables an additional level of optimization above
    release (!is_debug). This might be better expressed as a tri-state
    (debug, release, official) but for historical reasons there are two
    separate flags.

is_proto_quic
    Current value (from the default) = false
      From //net/features.gni:9

    If true, prune things down as needed for proto-quic build.

is_tsan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:21

    Compile for Thread Sanitizer to find threading bugs.

is_ubsan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:25

    Compile for Undefined Behaviour Sanitizer to find various types of
    undefined behaviour (excludes vptr checks).

is_ubsan_no_recover
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:28

    Halt the program if a problem is detected.

is_ubsan_null
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:31

    Compile for Undefined Behaviour Sanitizer's null pointer checks.

is_ubsan_security
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:84

    Enables core ubsan security features. Will later be removed once it matches
    is_ubsan.

is_ubsan_vptr
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:34

    Compile for Undefined Behaviour Sanitizer's vptr checks.

is_unsafe_developer_build
    Current value (from the default) = true
      From //base/BUILD.gn:49

    Unsafe developer build. Has developer-friendly features that may weaken or
    disable security measures like sandboxing or ASLR.
    IMPORTANT: Unsafe developer builds should never be distributed to end users.

is_win_fastlink
    Current value = true
      From //out/debug/args.gn:7
    Overridden from the default = false
      From //build/config/compiler/compiler.gni:51

    Tell VS to create a PDB that references information in .obj files rather
    than copying it all. This should improve linker performance. mspdbcmf.exe
    can be used to convert a fastlink pdb to a normal one.

jumbo_build_excluded
    Current value (from the default) = []
      From //build/config/jumbo.gni:15

    A list of targets to exclude from jumbo builds, for optimal round trip time
    when frequently changing a set of cpp files.

jumbo_file_merge_limit
    Current value (from the default) = -1
      From //build/config/jumbo.gni:31

    How many files to group at most. Smaller numbers give more
    parallellism, higher numbers give less total CPU usage. Higher
    numbers also give longer single-file recompilation times.
   
    Recommendations:
    Higher numbers than 100 does not reduce wall clock compile times
    even for 4 cores or less so no reason to go higher than 100.
    Going from 50 to 100 with a 4 core CPU saves about 3% CPU time and
    3% wall clock time in a tree with blink, v8 and content
    jumbofied. At the same time it increases the compile time for the
    largest jumbo chunks by 10-20% and reduces the chance to use all
    available CPU cores. So set the default to 50 to balance between
    high and low-core build performance. -1 means do the default which
    varies depending on whether goma is enabled.

libcpp_is_static
    Current value (from the default) = false
      From //build/config/c++/c++.gni:33

    ASan, MSan and TSan builds need to override operator new, operator delete,
    and some exception handling symbols, so libc++ must be a shared library to
    prevent duplicate symbol errors when linking.
    Additionally, -fsanitize=vptr requires libc++ to be a shared library
    because the ubsan runtime library that implements -fsanitize=vptr calls
    dynamic_cast with the ABI type info classes, which won't return the right
    answer if each DSO has its own copy of the ABI classes.

libyuv_disable_jpeg
    Current value (from the default) = false
      From //third_party/libyuv/libyuv.gni:15

libyuv_include_tests
    Current value (from the default) = false
      From //third_party/libyuv/libyuv.gni:14

libyuv_symbols_visible
    Current value (from the default) = false
      From //third_party/libyuv/BUILD.gn:19

    When building a shared library using a target in WebRTC or
    Chromium projects that depends on libyuv, setting this flag
    to true makes libyuv symbols visible inside that library.

libyuv_use_gflags
    Current value (from the default) = true
      From //third_party/libyuv/BUILD.gn:14

    Set to false to disable building with gflags.

libyuv_use_msa
    Current value (from the default) = false
      From //third_party/libyuv/libyuv.gni:18

libyuv_use_neon
    Current value (from the default) = false
      From //third_party/libyuv/libyuv.gni:16

link_pulseaudio
    Current value (from the default) = false
      From //media/media_options.gni:33

    Allows distributions to link pulseaudio directly (DT_NEEDED) instead of
    using dlopen. This helps with automated detection of ABI mismatches and
    prevents silent errors.

linux_use_bundled_binutils
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:55

llvm_force_head_revision
    Current value (from the default) = false
      From //build/toolchain/toolchain.gni:18

    If this is set to true, or if LLVM_FORCE_HEAD_REVISION is set to 1
    in the environment, we use the revision in the llvm repo to determine
    the CLANG_REVISION to use, instead of the version hard-coded into
    //tools/clang/scripts/update.py. This should only be used in
    conjunction with setting LLVM_FORCE_HEAD_REVISION in the
    environment when `gclient runhooks` is run as well.

mac_sdk_min
    Current value (from the default) = "10.12"
      From //build/config/mac/mac_sdk_overrides.gni:12

mac_views_browser
    Current value (from the default) = false
      From //ui/base/ui_features.gni:12

    Whether the entire browser uses toolkit-views on Mac instead of Cocoa.

media_use_ffmpeg
    Current value (from the default) = true
      From //media/media_options.gni:38

    Enable usage of FFmpeg within the media library. Used for most software
    based decoding, demuxing, and sometimes optimized FFTs. If disabled,
    implementors must provide their own demuxers and decoders.

media_use_libvpx
    Current value (from the default) = true
      From //media/media_options.gni:42

    Enable usage of libvpx within the media library. Used for software based
    decoding of VP9 and VP8A type content.

mojo_media_host
    Current value (from the default) = "gpu"
      From //media/media_options.gni:237

    The process that the mojo MediaService runs in. By default, all services
    registered in |mojo_media_services| are hosted in the MediaService, with the
    exception that when |enable_library_cdms| is true, the "cdm" service will
    run in a separate CdmService in the CDM (utility) process, while other
    |mojo_media_services| still run in the MediaService in the process specified
    by "mojo_media_host".
    Valid options are:
    - "none": Do not use mojo media service.
    - "browser": Use mojo media service hosted in the browser process.
    - "gpu": Use mojo media service hosted in the gpu process.
    - "utility": Use mojo media service hosted in the utility process.

mojo_media_services
    Current value (from the default) = ["video_decoder", "cdm"]
      From //media/media_options.gni:224

    A list of mojo media services that should be used in the media pipeline.
    Must not be empty if |enable_mojo_media| is true.
    Valid entries in the list are:
    - "renderer": Use mojo-based media Renderer service.
    - "cdm": Use mojo-based Content Decryption Module.
    - "audio_decoder": Use mojo-based audio decoder in the default media
                       Renderer. Cannot be used with the mojo Renderer above.
    - "video_decoder": Use mojo-based video decoder in the default media
                       Renderer. Cannot be used with the mojo Renderer above.

mojom_message_id_salt_path
    Current value (from the default) = "//chrome/VERSION"
      From //mojo/public/tools/bindings/mojom.gni:80

    The path to a file whose contents can be used as the basis for a message
    ID scrambling salt.

mojom_message_id_salt_suffix_path
    Current value (from the default) = ""
      From //mojo/public/tools/bindings/mojom.gni:90

msan_track_origins
    Current value (from the default) = 2
      From //build/config/sanitizers/sanitizers.gni:39

    Track where uninitialized memory originates from. From fastest to slowest:
    0 - no tracking, 1 - track only the initial allocation site, 2 - track the
    chain of stores leading from allocation site to use site.

msvc_use_absolute_paths
    Current value (from the default) = false
      From //build/toolchain/toolchain.gni:32

    Use absolute file paths in the compiler diagnostics and __FILE__ macro
    if needed.

msvs_xtree_patched
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:75

    Whether the VS xtree header has been patched to disable warning 4702. If
    it has, then we don't need to disable 4702 (unreachable code warning).
    The patch is preapplied to the internal toolchain and hence all bots.

ndk_supports_nativewindow
    Current value (from the default) = false
      From //third_party/angle/gni/angle.gni:44

ndk_supports_vulkan
    Current value (from the default) = false
      From //third_party/angle/gni/angle.gni:43

optimize_for_fuzzing
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:96

    Optimize for coverage guided fuzzing (balance between speed and number of
    branches). Can be also used to remove non-determinism and other issues.

optimize_webui
    Current value (from the default) = false
      From //ui/webui/webui_features.gni:9

    Optimize parts of Chrome's UI written with web technologies (HTML/CSS/JS)
    for runtime performance purposes. This does more work at compile time for
    speed benefits at runtime (so we skip in debug builds).

override_build_date
    Current value (from the default) = "N/A"
      From //base/BUILD.gn:39

    Override this value to give a specific build date.
    See //base/build_time.cc and //build/write_build_date_header.py for more
    details and the expected format.

ozone_auto_platforms
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:10

    Select platforms automatically. Turn this off for manual control.

ozone_platform
    Current value (from the default) = ""
      From //ui/ozone/ozone.gni:16

    The platform that will used at runtime by default. This can be overridden
    with the command line flag --ozone-platform=<platform>.

ozone_platform_cast
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:19

    Compile the 'cast' platform.

ozone_platform_gbm
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:22

    Compile the 'gbm' platform.

ozone_platform_headless
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:25

    Compile the 'headless' platform.

ozone_platform_magma
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:40

    Compile the 'magma' platform.

ozone_platform_scenic
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:28

    Compile the 'scenic' platform.

ozone_platform_wayland
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:34

    Compile the 'wayland' platform.

ozone_platform_windows
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:37

    Compile the 'windows' platform.

ozone_platform_x11
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:31

    Compile the 'x11' platform.

package_arcore
    Current value (from the default) = false
      From //device/vr/buildflags/buildflags.gni:37

    TODO(crbug.com/837999, crbug.com/841389): We currently only support arm and
    we are limiting to canary and dev until binary size issues are resolved.
    TODO(crbug.com/845080): add android_channel == "dev" || "canary"

pdf_bundle_freetype
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:16

    Build PDFium either:
    1) When set to true, with a bundled FreeType, built from FreeType source
       code in //third_party/freetype and PDFium's FreeType configs in
       third_party/freetype/include.
    2) When set to false, use whatever FreeType target is defined in
       //build/config/freetype.

pdf_enable_click_logging
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:19

    Generate logging messages for click events that reach PDFium

pdf_enable_v8
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:22

    Build PDFium either with or without v8 support.

pdf_enable_xfa
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:25

    Build PDFium either with or without XFA Forms support.

pdf_enable_xfa_bmp
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:28

    If XFA, also support bmp codec. Ignored if not XFA.

pdf_enable_xfa_gif
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:31

    If XFA, also support gif codec. Ignored if not XFA.

pdf_enable_xfa_png
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:34

    If XFA, also support png codec. Ignored if not XFA.

pdf_enable_xfa_tiff
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:37

    If XFA, also support png codec. Ignored if not XFA.

pdf_is_complete_lib
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:54

    Build a complete static library

pdf_is_standalone
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:51

    Build PDFium standalone

pdf_use_skia
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:41

    Build PDFium against Skia (experimental) rather than AGG. Use Skia to draw
    everything.

pdf_use_skia_paths
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:45

    Build PDFium against Skia (experimental) rather than AGG. Use Skia to draw
    paths.

pdf_use_win32_gdi
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:48

    Build PDFium with or without experimental win32 GDI APIs.

pgo_build
    Current value (from the default) = false
      From //chrome/common/features.gni:62

    Indicates if the build is using PGO.

pgo_data_path
    Current value (from the default) = ""
      From //build/config/compiler/pgo/pgo.gni:16

    When using chrome_pgo_phase = 2, read profile data from this path.

pkg_config
    Current value (from the default) = ""
      From //build/config/linux/pkg_config.gni:33

    A pkg-config wrapper to call instead of trying to find and call the right
    pkg-config directly. Wrappers like this are common in cross-compilation
    environments.
    Leaving it blank defaults to searching PATH for 'pkg-config' and relying on
    the sysroot mechanism to find the right .pc files.

proprietary_codecs
    Current value (from the default) = false
      From //build/config/features.gni:29

    Enables proprietary codecs and demuxers; e.g. H264, AAC, MP3, and MP4.
    We always build Google Chrome and Chromecast with proprietary codecs.
   
    Note: this flag is used by WebRTC which is DEPSed into Chrome. Moving it
    out of //build will require using the build_overrides directory.

remove_webcore_debug_symbols
    Current value = true
      From //out/debug/args.gn:6
    Overridden from the default = false
      From //third_party/blink/renderer/config.gni:21

    TODO: send a PSA out to tell people to switch to blink_symbol_level
    and remove this.
    If true, doesn't compile debug symbols into webcore reducing the
    size of the binary and increasing the speed of gdb.

ro_segment_workaround_for_valgrind
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:126

    Set to true to pass --no-rosegment to lld. This is a workaround
    for a KI issue in Valgrind,
    https://bugs.kde.org/show_bug.cgi?id=384727

root_extra_deps
    Current value (from the default) = []
      From //BUILD.gn:37

    A list of extra dependencies to add to the root target. This allows a
    checkout to add additional targets without explicitly changing any checked-
    in files.

rtc_audio_device_plays_sinus_tone
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:138

    When set to true, replace the audio output with a sinus tone at 440Hz.
    The ADM will ask for audio data from WebRTC but instead of reading real
    audio samples from NetEQ, a sinus tone will be generated and replace the
    real audio samples.

rtc_build_examples
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:78

    Set this to false to skip building examples.

rtc_build_json
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:169

    Disable these to not build components which can be externally provided.

rtc_build_libevent
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:182

rtc_build_libsrtp
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:170

rtc_build_libvpx
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:171

rtc_build_opus
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:173

rtc_build_ssl
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:174

rtc_build_tools
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:81

    Set this to false to skip building tools.

rtc_build_usrsctp
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:175

rtc_build_with_neon
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:119

rtc_builtin_ssl_root_certificates
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:37

    Setting this to false will require the API user to pass in their own
    SSLCertificateVerifier to verify the certificates presented from a
    TLS-TURN server. In return disabling this saves around 100kb in the binary.

rtc_enable_android_aaudio
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:91

    Enable use of Android AAudio which requires Android SDK 26 or above and
    NDK r16 or above.

rtc_enable_android_opensl
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:94

    TODO(henrika): can this flag be removed?

rtc_enable_bwe_test_logging
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:75

    Set this to true to enable BWE test logging.

rtc_enable_external_auth
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:68

    Enable when an external authentication mechanism is used for performing
    packet authentication for RTP packets instead of libsrtp.

rtc_enable_intelligibility_enhancer
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:64

    Disable the code for the intelligibility enhancer by default.

rtc_enable_libevent
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:181

rtc_enable_protobuf
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:163

    Enables the use of protocol buffers for debug recordings.

rtc_enable_sctp
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:166

    Set this to disable building with support for SCTP data channels.

rtc_include_ilbc
    Current value = false
      From //.gn:65
    Overridden from the default = true
      From //third_party/webrtc/webrtc.gni:40

    Include the iLBC audio codec?

rtc_include_internal_audio_device
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:197

    Chromium uses its own IO handling, so the internal ADM is only built for
    standalone WebRTC.

rtc_include_opus
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:43

    Disable this to avoid building the Opus audio codec.

rtc_include_pulse_audio
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:193

    Excluded in Chromium since its prerequisites don't require Pulse Audio.

rtc_include_tests
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:200

    Include tests in standalone checkout.

rtc_jsoncpp_root
    Current value (from the default) = "//third_party/jsoncpp/source/include"
      From //third_party/webrtc/webrtc.gni:54

    Used to specify an external Jsoncpp include path when not compiling the
    library that comes with WebRTC (i.e. rtc_build_json == 0).

rtc_libvpx_build_vp9
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:172

rtc_link_task_queue_impl
    Current value = false
      From //.gn:60
    Overridden from the default = true
      From //third_party/webrtc/webrtc.gni:111

    Links a default implementation of task queues to targets
    that depend on the target rtc_task_queue. Set to false to
    use an external implementation.

rtc_opus_support_120ms_ptime
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:47

    Enable this if the Opus version upon which WebRTC is built supports direct
    encoding of 120 ms packets.

rtc_opus_variable_complexity
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:50

    Enable this to let the Opus audio codec change complexity on the fly.

rtc_prefer_fixed_point
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:61

    Selects fixed-point code where possible.

rtc_sanitize_coverage
    Current value (from the default) = ""
      From //third_party/webrtc/webrtc.gni:106

    Set to "func", "block", "edge" for coverage generation.
    At unit test runtime set UBSAN_OPTIONS="coverage=1".
    It is recommend to set include_examples=0.
    Use llvm's sancov -html-report for human readable reports.
    See http://clang.llvm.org/docs/SanitizerCoverage.html .

rtc_ssl_root
    Current value (from the default) = ""
      From //third_party/webrtc/webrtc.gni:58

    Used to specify an external OpenSSL include path when not compiling the
    library that comes with WebRTC (i.e. rtc_build_ssl == 0).

rtc_use_builtin_sw_codecs
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:145

    Disable this to build without support for built-in software codecs.

rtc_use_dummy_audio_file_devices
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:132

    By default, use normal platform audio support or dummy audio, but don't
    use file-based audio playout and record.

rtc_use_gtk
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:190

    Build sources requiring GTK. NOTICE: This is not present in Chrome OS
    build environments, even if available for Chromium builds.

rtc_use_h264
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:128

    Enable this to build OpenH264 encoder/FFmpeg decoder. This is supported on
    all platforms except Android and iOS. Because FFmpeg can be built
    with/without H.264 support, |ffmpeg_branding| has to separately be set to a
    value that includes H.264, for example "Chrome". If FFmpeg is built without
    H.264, compilation succeeds but |H264DecoderImpl| fails to initialize.
    CHECK THE OPENH264, FFMPEG AND H.264 LICENSES/PATENTS BEFORE BUILDING.
    http://www.openh264.org, https://www.ffmpeg.org/

rtc_use_lto
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:99

    Link-Time Optimizations.
    Executes code generation at link-time instead of compile-time.
    https://gcc.gnu.org/wiki/LinkTimeOptimization

rtc_use_memcheck
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:142

    When set to true, test targets will declare the files needed to run memcheck
    as data dependencies. This is to enable memcheck execution on swarming bots.

rtc_use_x11
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:84

    Set this to false to skip building code that requires X11.

runtime_call_stats_count_everything
    Current value (from the default) = false
      From //third_party/blink/renderer/platform/BUILD.gn:220

safe_browsing_mode
    Current value (from the default) = 1
      From //build/config/features.gni:40

sample_profile_is_accurate
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:90

    Whether we should consider the profile we're using to be accurate. Accurate
    profiles have the benefit of (potentially substantial) binary size
    reductions, by instructing the compiler to optimize cold and uncovered
    functions heavily for size. This often comes at the cost of performance.

sanitizer_coverage_flags
    Current value (from the default) = ""
      From //build/config/sanitizers/sanitizers.gni:104

    Value for -fsanitize-coverage flag. Setting this causes
    use_sanitizer_coverage to be enabled.
    Default value when unset and use_fuzzing_engine=true:
        trace-pc-guard
    Default value when unset and use_sanitizer_coverage=true:
        trace-pc-guard,indirect-calls

sanitizer_keep_symbols
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:110

    Keep symbol level when building with sanitizers. When sanitizers are
    enabled, the default is to compile with the minimum debug info level
    necessary, overriding any other symbol level arguments that may be set.
    Setting this to true prevents this.

sanitizer_no_symbols
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:114

    Builds fuzzer/sanitizers without symbols.  Use with symbol_level=0.
    Useful for reducing binary size when building with use_clang_coverage=true.

single_module_mode_handle_verifier
    Current value (from the default) = false
      From //base/win/BUILD.gn:10

    Indicates if the handle verifier should operate in a single module mode. By
    default a single instance gets shared by all the modules.

skia_whitelist_serialized_typefaces
    Current value (from the default) = false
      From //skia/BUILD.gn:25

skip_archive_compression
    Current value (from the default) = true
      From //chrome/installer/mini_installer/BUILD.gn:20

    The Chrome archive is compressed in official builds to reduce the size of
    the installer. By default: non-official or component builds, a build mode
    targeting developers, do not compress so as to provide quicker build-test
    cycles.

strip_absolute_paths_from_debug_symbols
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:99

    Optimize symbol files for maximizing goma cache hit rate. This is on by
    default only when goma is enabled on Linux because setting this to true may
    make it harder to debug binaries.
    See below reference for detail.
    https://chromium.googlesource.com/chromium/src/+/master/docs/linux_debugging.md#Source-level-debug-with-fdebug_compilation_dir

strip_debug_info
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:105

    Strip the debug info of symbols file in lib.unstripped to reduce size.

symbol_level
    Current value (from the default) = -1
      From //build/config/compiler/compiler.gni:26

    How many symbols to include in the build. This affects the performance of
    the build since the symbols are large and dealing with them is slow.
      2 means regular build with symbols.
      1 means minimal symbols, usually enough for backtraces only. Symbols with
    internal linkage (static functions or those in anonymous namespaces) may not
    appear when using this level.
      0 means no symbols.
      -1 means auto-set according to debug/release and platform.

system_libdir
    Current value (from the default) = "lib"
      From //build/config/linux/pkg_config.gni:47

    CrOS systemroots place pkgconfig files at <systemroot>/usr/share/pkgconfig
    and one of <systemroot>/usr/lib/pkgconfig or <systemroot>/usr/lib64/pkgconfig
    depending on whether the systemroot is for a 32 or 64 bit architecture.
   
    When build under GYP, CrOS board builds specify the 'system_libdir' variable
    as part of the GYP_DEFINES provided by the CrOS emerge build or simple
    chrome build scheme. This variable permits controlling this for GN builds
    in similar fashion by setting the `system_libdir` variable in the build's
    args.gn file to 'lib' or 'lib64' as appropriate for the target architecture.

target_cpu
    Current value = "x86"
      From //out/debug/args.gn:5
    Overridden from the default = ""
      (Internally set; try `gn help target_cpu`.)

target_os
    Current value (from the default) = ""
      (Internally set; try `gn help target_os`.)

target_sysroot
    Current value (from the default) = ""
      From //build/config/sysroot.gni:13

    The absolute path of the sysroot that is applied when compiling using
    the target toolchain.

target_sysroot_dir
    Current value (from the default) = "//build/linux"
      From //build/config/sysroot.gni:16

    The absolute path to directory containing linux sysroot images

target_winuwp_family
    Current value (from the default) = "app"
      From //build/config/win/BUILD.gn:38

    possible values:
      "app" - Windows Store Applications
      "phone" - Windows Phone Applications
      "system" - Windows Drivers and Tools
      "server" - Windows Server Applications
      "desktop" - Windows Desktop Applications

target_winuwp_version
    Current value (from the default) = "10"
      From //build/config/win/BUILD.gn:30

    possible values for target_winuwp_version:
      "10" - Windows UWP 10
      "8.1" - Windows RT 8.1
      "8.0" - Windows RT 8.0

toolkit_views
    Current value (from the default) = true
      From //build/config/ui.gni:38

    True means the UI is built using the "views" framework.

treat_warnings_as_errors
    Current value (from the default) = true
      From //build/config/compiler/BUILD.gn:44

    Default to warnings as errors for default workflow, where we catch
    warnings with known toolchains. Allow overriding this e.g. for Chromium
    builds on Linux that could use a different version of the compiler.
    With GCC, warnings in no-Chromium code are always not treated as errors.

use_afl
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:80

    Compile for fuzzing with AFL.

use_allocator
    Current value (from the default) = "none"
      From //build/config/allocator.gni:28

    Memory allocator to use. Set to "none" to use default allocator.

use_allocator_shim
    Current value (from the default) = false
      From //build/config/allocator.gni:31

    Causes all the allocations to be routed via allocator_shim.cc.

use_alsa
    Current value (from the default) = false
      From //media/media_options.gni:96

    Enables runtime selection of ALSA library for audio.

use_aura
    Current value (from the default) = true
      From //build/config/ui.gni:30

    Indicates if Aura is enabled. Aura is a low-level windowing library, sort
    of a replacement for GDI or GTK.

use_boringssl_for_http_transport_socket
    Current value (from the default) = false
      From //third_party/crashpad/crashpad/util/BUILD.gn:22

use_cfi_cast
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:60

    Enable checks for bad casts: derived cast and unrelated cast.
    TODO(krasin): remove this, when we're ready to add these checks by default.
    https://crbug.com/626794

use_cfi_diag
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:69

    Print detailed diagnostics when Control Flow Integrity detects a violation.

use_cfi_icall
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:65

    Enable checks for indirect function calls via a function pointer.
    TODO(pcc): remove this when we're ready to add these checks by default.
    https://crbug.com/701919

use_cfi_recover
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:73

    Let Control Flow Integrity continue execution instead of crashing when
    printing diagnostics (use_cfi_diag = true).

use_clang_coverage
    Current value (from the default) = false
      From //build/config/coverage/coverage.gni:9

    Enable Clang's Source-based Code Coverage.

use_clang_static_analyzer
    Current value (from the default) = false
      From //build/toolchain/clang_static_analyzer.gni:10

    Uses the Clang static analysis tools during compilation.

use_cras
    Current value (from the default) = false
      From //media/media_options.gni:51

    Override to dynamically link the cras (ChromeOS audio) library.

use_crash_key_stubs
    Current value (from the default) = false
      From //components/crash/core/common/BUILD.gn:9

    If set to true, this will stub out and disable the entire crash key system.

use_cups
    Current value (from the default) = false
      From //printing/buildflags/buildflags.gni:18

use_custom_libcxx
    Current value (from the default) = false
      From //build/config/c++/c++.gni:14

use_custom_libcxx_for_host
    Current value (from the default) = false
      From //build/config/c++/c++.gni:24

    Use libc++ instead of stdlibc++ when using the host_cpu toolchain, even if
    use_custom_libcxx is false. This is useful for cross-compiles where a custom
    toolchain for the target_cpu has been set as the default toolchain, but
    use_custom_libcxx should still be true when building for the host.  The
    expected usage is to set use_custom_libcxx=false and
    use_custom_libcxx_for_host=true in the passed in buildargs.

use_cxx11
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:102

    Allow projects that wish to stay on C++11 to override Chromium's default.

use_cxx11_on_android
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:135

    C++11 may not be an option if Android test infrastructure is used.

use_dbus
    Current value (from the default) = false
      From //build/config/features.gni:51

use_debug_fission
    Current value (from the default) = "default"
      From //build/config/compiler/compiler.gni:42

    use_debug_fission: whether to use split DWARF debug info
    files. This can reduce link time significantly, but is incompatible
    with some utilities such as icecc and ccache. Requires gold and
    gcc >= 4.8 or clang.
    http://gcc.gnu.org/wiki/DebugFission
   
    This is a placeholder value indicating that the code below should set
    the default.  This is necessary to delay the evaluation of the default
    value expression until after its input values such as use_gold have
    been set, e.g. by a toolchain_args() block.

use_drfuzz
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:88

    Compile for fuzzing with Dr. Fuzz
    See http://www.chromium.org/developers/testing/dr-fuzz

use_egl
    Current value (from the default) = true
      From //ui/gl/features.gni:12

    Should EGL support be compiled. Can be overriden to test during bring up
    of EGL support on other platforms

use_evdev_gestures
    Current value (from the default) = false
      From //ui/events/ozone/BUILD.gn:12

    Support ChromeOS touchpad gestures with ozone.

use_external_popup_menu
    Current value (from the default) = false
      From //content/common/features.gni:9

    Whether or not to use external popup menu.

use_gcm_from_platform
    Current value (from the default) = false
      From //components/gcm_driver/config.gni:8

    Use native GCM driver for all non-Android builds. On Android, the platform
    includes GMS which provides the GCM client.

use_ghash
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:130

    Turn this on to use ghash feature of lld for faster debug link on Windows.
    http://blog.llvm.org/2018/01/improving-link-time-on-windows-with.html

use_gio
    Current value (from the default) = false
      From //build/config/features.gni:53

use_glib
    Current value (from the default) = false
      From //build/config/ui.gni:33

    Whether we should use glib, a low level C utility library.

use_gnome_keyring
    Current value (from the default) = false
      From //components/os_crypt/features.gni:10

    Whether to use libgnome-keyring (deprecated by libsecret).
    See http://crbug.com/466975 and http://crbug.com/355223.

use_gold
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:175

    Whether to use the gold linker from binutils instead of lld or bfd.

use_goma
    Current value (from the default) = false
      From //build/toolchain/goma.gni:9

    Set to true to enable distributed compilation using Goma.

use_gtk3
    Current value (from the default) = true
      From //build/config/linux/gtk/gtk.gni:11

    Whether to compile against GTKv3 instead of GTKv2.

use_icf
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:151

    Set to true to use icf, Identical Code Folding.
   
    icf=all is broken in older golds, see
    https://sourceware.org/bugzilla/show_bug.cgi?id=17704
    See also https://crbug.com/663886
    `linux_use_bundled_binutils` is to avoid breaking Linux distros which may
    still have a buggy gold.
    chromeos binutils has been patched with the fix, so always use icf there.
    The bug only affects x86 and x64, so we can still use ICF when targeting
    other architectures.
   
    lld doesn't have the bug.

use_incremental_wpo
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:55

    Whether or not we should turn on incremental WPO. Only affects the VS
    Windows build.

use_jumbo_build
    Current value (from the default) = false
      From //build/config/jumbo.gni:11

    If true, use a jumbo build (files compiled together) to speed up
    compilation.

use_kerberos
    Current value (from the default) = true
      From //net/features.gni:24

    Enable Kerberos authentication. It is disabled by default on iOS, Fuchsia
    and Chromecast, at least for now. This feature needs configuration
    (krb5.conf and so on). On Chrome OS it is only supported on Active
    Directory managed devices.
    TODO(fuchsia): Enable kerberos on Fuchsia when it's implemented there.

use_libfuzzer
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:77

    Compile for fuzzing with LLVM LibFuzzer.
    See http://www.chromium.org/developers/testing/libfuzzer

use_libjpeg_turbo
    Current value (from the default) = true
      From //third_party/libjpeg.gni:11

    Uses libjpeg_turbo as the jpeg implementation. Has no effect if
    use_system_libjpeg is set.

use_libpci
    Current value (from the default) = false
      From //third_party/angle/BUILD.gn:18

    Use the PCI lib to collect GPU information on Linux.

use_lld
    Current value (from the default) = true
      From //build/config/compiler/compiler.gni:166

use_locally_built_instrumented_libraries
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:48

    Use dynamic libraries instrumented by one of the sanitizers instead of the
    standard system libraries. Set this flag to build the libraries from source.

use_low_quality_image_interpolation
    Current value (from the default) = false
      From //third_party/blink/renderer/config.gni:35

    If true, defaults image interpolation to low quality.

use_official_google_api_keys
    Current value (from the default) = ""
      From //google_apis/BUILD.gn:31

    You can set the variable 'use_official_google_api_keys' to true
    to use the Google-internal file containing official API keys
    for Google Chrome even in a developer build.  Setting this
    variable explicitly to true will cause your build to fail if the
    internal file is missing.
   
    The variable is documented here, but not handled in this file;
    see //google_apis/determine_use_official_keys.gypi for the
    implementation.
   
    Set the variable to false to not use the internal file, even when
    it exists in your checkout.
   
    Leave it unset or set to "" to have the variable
    implicitly set to true if you have
    src/google_apis/internal/google_chrome_api_keys.h in your
    checkout, and implicitly set to false if not.
   
    Note that official builds always behave as if the variable
    was explicitly set to true, i.e. they always use official keys,
    and will fail to build if the internal file is missing.

use_openh264
    Current value (from the default) = false
      From //third_party/openh264/openh264_args.gni:11

    Enable this to build OpenH264 (for encoding, not decoding).
    CHECK THE OPENH264 LICENSE/PATENT BEFORE BUILDING, see
    http://www.openh264.org/.

use_ozone
    Current value (from the default) = false
      From //build/config/ui.gni:26

    Indicates if Ozone is enabled. Ozone is a low-level library layer for Linux
    that does not require X11. Enabling this feature disables use of glib, x11,
    Pango, and Cairo.

use_partition_alloc
    Current value (from the default) = true
      From //build/config/allocator.gni:34

    Partition alloc is included by default except iOS.

use_pic
    Current value (from the default) = true
      From //build/config/compiler/compiler.gni:58

    Whether or not we should use position independent code.

use_platform_icu_alternatives
    Current value (from the default) = false
      From //url/features.gni:10

    Enables the use of ICU alternatives in lieu of ICU for the target toolchain.
    The flag is used for Cronet to reduce the size of the Cronet binary.

use_prebuilt_instrumented_libraries
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:44

    Use dynamic libraries instrumented by one of the sanitizers instead of the
    standard system libraries. Set this flag to download prebuilt binaries from
    GCS.

use_pulseaudio
    Current value (from the default) = false
      From //media/media_options.gni:93

    Enables runtime selection of PulseAudio library.

use_rtti
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:86

    Build with C++ RTTI enabled. Chromium builds without RTTI by default,
    but some sanitizers are known to require it, like CFI diagnostics
    and UBsan variants.

use_sanitizer_coverage
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:151

use_static_angle
    Current value (from the default) = false
      From //ui/gl/features.gni:8

    Whether ANGLE should be linked statically
    False by default, enabling currently supported only on Android

use_swiftshader_with_subzero
    Current value (from the default) = true
      From //third_party/swiftshader/src/Reactor/BUILD.gn:20

    Currently, Subzero is not used by default
    LLVM is still the default backend

use_sysroot
    Current value (from the default) = true
      From //build/config/sysroot.gni:18

use_system_freetype
    Current value (from the default) = false
      From //build/config/freetype/freetype.gni:13

    Blink needs a recent and properly build-configured FreeType version to
    support OpenType variations, color emoji and avoid security bugs. By default
    we ship and link such a version as part of Chrome. For distributions that
    prefer to keep linking to the version the system, FreeType must be newer
    than version 2.7.1 and have color bitmap support compiled in. WARNING:
    System FreeType configurations other than as described WILL INTRODUCE TEXT
    RENDERING AND SECURITY REGRESSIONS.

use_system_harfbuzz
    Current value (from the default) = false
      From //third_party/harfbuzz-ng/harfbuzz.gni:11

    Blink uses a cutting-edge version of Harfbuzz; most Linux distros do not
    contain a new enough version of the code to work correctly. However,
    ChromeOS chroots (i.e, real ChromeOS builds for devices) do contain a
    new enough version of the library, and so this variable exists so that
    ChromeOS can build against the system lib and keep binary sizes smaller.

use_system_lcms2
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:63

    Don't build against bundled lcms2.

use_system_libjpeg
    Current value (from the default) = false
      From //third_party/libjpeg.gni:7

    Uses system libjpeg. If true, overrides use_libjpeg_turbo.

use_system_libpng
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:66

    Don't build against bundled libpng.

use_system_xcode
    Current value (from the default) = ""
      From //build_overrides/build.gni:46

    Use the system install of Xcode for tools like ibtool, libtool, etc.
    This does not affect the compiler. When this variable is false, targets will
    instead use a hermetic install of Xcode. [The hermetic install can be
    obtained with gclient sync after setting the environment variable
    FORCE_MAC_TOOLCHAIN].

use_system_zlib
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:60

    Don't build against bundled zlib.

use_tcmalloc_small_but_slow
    Current value (from the default) = false
      From //base/allocator/BUILD.gn:16

    Provide a way to build tcmalloc with a low memory footprint.

use_thin_lto
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:46

    Enables support for ThinLTO, which links 3x-10x faster than full LTO. See
    also http://blog.llvm.org/2016/06/thinlto-scalable-and-incremental-lto.html

use_udev
    Current value (from the default) = false
      From //build/config/features.gni:49

    libudev usage. This currently only affects the content layer.

use_unofficial_version_number
    Current value (from the default) = true
      From //components/version_info/BUILD.gn:10

use_v4l2_codec
    Current value (from the default) = false
      From //media/gpu/args.gni:11

    Indicates if Video4Linux2 codec is used. This is used for all CrOS
    platforms which have v4l2 hardware encoder / decoder.

use_v4lplugin
    Current value (from the default) = false
      From //media/gpu/args.gni:7

    Indicates if V4L plugin is used.

use_v8_context_snapshot
    Current value (from the default) = true
      From //tools/v8_context_snapshot/v8_context_snapshot.gni:18

use_vaapi
    Current value (from the default) = false
      From //media/gpu/args.gni:15

    Indicates if VA-API-based hardware acceleration is to be used. This
    is typically the case on x86-based ChromeOS devices.

use_vr_assets_component
    Current value (from the default) = false
      From //chrome/browser/vr/features.gni:12

    Whether to register, download, etc. the VR assets component.

use_vs_code_analysis
    Current value (from the default) = false
      From //build/config/win/BUILD.gn:21

    Set this to true to enable static analysis through Visual Studio's
    /analyze. This dramatically slows compiles and reports thousands of
    warnings, so normally this is done on a build machine and only the new
    warnings are examined.

use_webaudio_ffmpeg
    Current value (from the default) = true
      From //third_party/blink/renderer/config.gni:38

    If true, ffmpeg will be used for decoding audio.

use_xcode_clang
    Current value (from the default) = false
      From //build/toolchain/toolchain.gni:23

    Compile with Xcode version of clang instead of hermetic version shipped
    with the build. Used on iOS to ship official builds (as they are built
    with the version of clang shipped with Xcode).

use_xkbcommon
    Current value (from the default) = false
      From //ui/base/ui_features.gni:9

    Optional system library.

use_zucchini
    Current value (from the default) = false
      From //chrome/installer/setup/buildflags.gni:8

    Specify if the Zucchini patcher features should be included in setup.exe.
    See //components/zucchini for more information.

using_mismatched_sample_profile
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:65

    Whether we're using a sample profile collected on an architecture different
    than the one we're compiling for.
   
    It's currently not possible to collect AFDO profiles on anything but
    x86{,_64}.

v8_android_log_stdout
    Current value (from the default) = false
      From //v8/BUILD.gn:23

    Print to stdout on Android.

v8_can_use_fpu_instructions
    Current value (from the default) = true
      From //v8/BUILD.gn:130

    Similar to vfp but on MIPS.

v8_check_microtasks_scopes_consistency
    Current value = false
      From //.gn:57
    Overridden from the default = ""
      From //v8/BUILD.gn:156

    Temporary flag to allow embedders to update their microtasks scopes
    while rolling in a new version of V8.

v8_code_coverage
    Current value (from the default) = false
      From //v8/gni/v8.gni:13

    Set flags for tracking code coverage. Uses gcov with gcc and sanitizer
    coverage with clang.

v8_correctness_fuzzer
    Current value (from the default) = false
      From //v8/gni/v8.gni:16

    Includes files needed for correctness fuzzing.

v8_current_cpu
    Current value (from the default) = "x86"
      From //build/config/v8_target_cpu.gni:60

    This argument is declared here so that it can be overridden in toolchains.
    It should never be explicitly set by the user.

v8_custom_deps
    Current value (from the default) = ""
      From //v8/BUILD.gn:26

    Dynamically set an additional dependency from v8/custom_deps.

v8_deprecate_get_isolate
    Current value (from the default) = false
      From //v8/BUILD.gn:30

    Turns on deprecation warnings for HeapObject::GetIsolate,
    HeapObject::GetHeap, Handle(T* obj) and handle(T* obj).

v8_deprecation_warnings
    Current value (from the default) = false
      From //v8/BUILD.gn:46

    Enable compiler warnings when using V8_DEPRECATED apis.

v8_embed_script
    Current value (from the default) = ""
      From //v8/BUILD.gn:52

    Embeds the given script into the snapshot.

v8_embedder_string
    Current value (from the default) = ""
      From //v8/BUILD.gn:55

    Allows the embedder to add a custom suffix to the version string.

v8_enable_backtrace
    Current value (from the default) = ""
      From //v8/gni/v8.gni:32

    Support for backtrace_symbols on linux.

v8_enable_concurrent_marking
    Current value (from the default) = true
      From //v8/BUILD.gn:109

    Sets -dV8_CONCURRENT_MARKING

v8_enable_debugging_features
    Current value (from the default) = true
      From //v8/BUILD.gn:34

    Turns on all V8 debug features. Enables running V8 in a pseudo debug mode
    within a release Chrome.

v8_enable_disassembler
    Current value (from the default) = ""
      From //v8/BUILD.gn:58

    Sets -dENABLE_DISASSEMBLER.

v8_enable_embedded_builtins
    Current value (from the default) = false
      From //v8/BUILD.gn:81

v8_enable_fast_mksnapshot
    Current value (from the default) = false
      From //v8/BUILD.gn:76

    Enable fast mksnapshot runs.

v8_enable_future
    Current value (from the default) = false
      From //v8/BUILD.gn:37

    Sets -DV8_ENABLE_FUTURE.

v8_enable_gdbjit
    Current value = false
      From //.gn:52
    Overridden from the default = false
      From //v8/BUILD.gn:151

v8_enable_handle_zapping
    Current value (from the default) = true
      From //v8/BUILD.gn:70

    Sets -dENABLE_HANDLE_ZAPPING.

v8_enable_i18n_support
    Current value (from the default) = true
      From //v8/gni/v8.gni:49

    Enable ECMAScript Internationalization API. Enabling this feature will
    add a dependency on the ICU library.

v8_enable_minor_mc
    Current value (from the default) = true
      From //v8/BUILD.gn:162

    Enable minor mark compact.

v8_enable_object_print
    Current value (from the default) = ""
      From //v8/BUILD.gn:94

    Sets -dOBJECT_PRINT.

v8_enable_pointer_compression
    Current value (from the default) = false
      From //v8/BUILD.gn:87

    Enable pointer compression (sets -dV8_COMPRESS_POINTERS).

v8_enable_slow_dchecks
    Current value (from the default) = false
      From //v8/BUILD.gn:73

    Enable slow dchecks.

v8_enable_test_features
    Current value (from the default) = ""
      From //v8/BUILD.gn:112

    Enables various testing features.

v8_enable_trace_feedback_updates
    Current value (from the default) = false
      From //v8/BUILD.gn:106

    Sets -dV8_TRACE_FEEDBACK_UPDATES.

v8_enable_trace_ignition
    Current value (from the default) = false
      From //v8/BUILD.gn:103

    Sets -dV8_TRACE_IGNITION.

v8_enable_trace_maps
    Current value (from the default) = ""
      From //v8/BUILD.gn:97

    Sets -dV8_TRACE_MAPS.

v8_enable_v8_checks
    Current value (from the default) = ""
      From //v8/BUILD.gn:100

    Sets -dV8_ENABLE_CHECKS.

v8_enable_verify_csa
    Current value (from the default) = false
      From //v8/BUILD.gn:84

    Enable code-generation-time checking of types in the CodeStubAssembler.

v8_enable_verify_heap
    Current value (from the default) = ""
      From //v8/BUILD.gn:40

    Sets -DVERIFY_HEAP.

v8_enable_verify_predictable
    Current value (from the default) = false
      From //v8/BUILD.gn:43

    Sets -DVERIFY_PREDICTABLE

v8_enable_vtunejit
    Current value (from the default) = false
      From //v8/BUILD.gn:67

    Sets -dENABLE_VTUNE_JIT_INTERFACE.

v8_experimental_extra_library_files
    Current value = []
      From //.gn:51
    Overridden from the default = ["//test/cctest/test-experimental-extra.js"]
      From //v8/BUILD.gn:148

v8_extra_library_files
    Current value = ["//third_party/blink/renderer/core/streams/CommonOperations.js", "//third_party/blink/renderer/core/streams/CommonStrings.js", "//third_party/blink/renderer/core/streams/SimpleQueue.js", "//third_party/blink/renderer/core/streams/ByteLengthQueuingStrategy.js", "//third_party/blink/renderer/core/streams/CountQueuingStrategy.js", "//third_party/blink/renderer/core/streams/ReadableStream.js", "//third_party/blink/renderer/core/streams/WritableStream.js", "//third_party/blink/renderer/core/streams/TransformStream.js"]
      From //.gn:37
    Overridden from the default = ["//test/cctest/test-extra.js"]
      From //v8/BUILD.gn:142

    List of extra files to snapshot. They will be snapshotted in order so
    if files export symbols used by later files, they should go first.
   
    This default is used by cctests. Projects using V8 will want to override.

v8_gcmole
    Current value (from the default) = false
      From //v8/gni/v8.gni:26

    Indicate if gcmole was fetched as a hook to make it available on swarming.

v8_has_valgrind
    Current value (from the default) = false
      From //v8/gni/v8.gni:23

    Indicate if valgrind was fetched as a custom deps to make it available on
    swarming.

v8_imminent_deprecation_warnings
    Current value = false
      From //.gn:53
    Overridden from the default = false
      From //v8/BUILD.gn:49

    Enable compiler warnings when using V8_DEPRECATE_SOON apis.

v8_interpreted_regexp
    Current value (from the default) = false
      From //v8/BUILD.gn:91

    Interpreted regexp engine exists as platform-independent alternative
    based where the regular expression is compiled to a bytecode.

v8_monolithic
    Current value (from the default) = false
      From //v8/gni/v8.gni:55

    Enable monolithic static library for embedders.

v8_multi_arch_build
    Current value (from the default) = false
      From //v8/gni/v8.gni:19

    Adds additional compile target for building multiple architectures at once.

v8_no_inline
    Current value (from the default) = false
      From //v8/BUILD.gn:124

    Switches off inlining in V8.

v8_optimized_debug
    Current value (from the default) = true
      From //v8/gni/v8.gni:29

    Turns on compiler optimizations in V8 in Debug build.

v8_os_page_size
    Current value (from the default) = "0"
      From //v8/BUILD.gn:127

    Override OS page size when generating snapshot

v8_perf_prof_unwinding_info
    Current value (from the default) = false
      From //v8/BUILD.gn:116

    Build the snapshot with unwinding information for perf.
    Sets -dV8_USE_SNAPSHOT_WITH_UNWINDING_INFO.

v8_postmortem_support
    Current value (from the default) = false
      From //v8/BUILD.gn:121

    With post mortem support enabled, metadata is embedded into libv8 that
    describes various parameters of the VM for use by debuggers. See
    tools/gen-postmortem-metadata.py for details.

v8_promise_internal_field_count
    Current value (from the default) = 0
      From //v8/BUILD.gn:61

    Sets the number of internal fields on promise objects.

v8_snapshot_toolchain
    Current value (from the default) = ""
      From //v8/snapshot_toolchain.gni:34

    The v8 snapshot needs to be built by code that is compiled with a
    toolchain that matches the bit-width of the target CPU, but runs on
    the host.

v8_static_library
    Current value (from the default) = false
      From //v8/gni/v8.gni:52

    Use static libraries instead of source_sets.

v8_target_cpu
    Current value (from the default) = ""
      From //build/config/v8_target_cpu.gni:33

    This arg is used when we want to tell the JIT-generating v8 code
    that we want to have it generate for an architecture that is different
    than the architecture that v8 will actually run on; we then run the
    code under an emulator. For example, we might run v8 on x86, but
    generate arm code and run that under emulation.
   
    This arg is defined here rather than in the v8 project because we want
    some of the common architecture-specific args (like arm_float_abi or
    mips_arch_variant) to be set to their defaults either if the current_cpu
    applies *or* if the v8_current_cpu applies.
   
    As described below, you can also specify the v8_target_cpu to use
    indirectly by specifying a `custom_toolchain` that contains v8_$cpu in the
    name after the normal toolchain.
   
    For example, `gn gen --args="custom_toolchain=...:clang_x64_v8_arm64"`
    is equivalent to setting --args=`v8_target_cpu="arm64"`. Setting
    `custom_toolchain` is more verbose but makes the toolchain that is
    (effectively) being used explicit.
   
    v8_target_cpu can only be used to target one architecture in a build,
    so if you wish to build multiple copies of v8 that are targeting
    different architectures, you will need to do something more
    complicated involving multiple toolchains along the lines of
    custom_toolchain, above.

v8_typed_array_max_size_in_heap
    Current value (from the default) = 64
      From //v8/BUILD.gn:136

    Controls the threshold for on-heap/off-heap Typed Arrays.

v8_untrusted_code_mitigations
    Current value (from the default) = true
      From //v8/BUILD.gn:159

    Enable mitigations for executing untrusted code.

v8_use_external_startup_data
    Current value (from the default) = ""
      From //v8/gni/v8.gni:45

    Use external files for startup data blobs:
    the JS builtins sources and the start snapshot.

v8_use_mips_abi_hardfloat
    Current value (from the default) = true
      From //v8/BUILD.gn:133

    Similar to the ARM hard float ABI but on MIPS.

v8_use_multi_snapshots
    Current value (from the default) = false
      From //v8/gni/v8.gni:41

    Enable several snapshots side-by-side (e.g. default and for trusted code).

v8_use_snapshot
    Current value (from the default) = true
      From //v8/gni/v8.gni:38

    Enable the snapshot feature, for fast context creation.
    http://v8project.blogspot.com/2015/09/custom-startup-snapshots.html
    TODO(thakis): Make snapshots work in 64-bit win/cross builds,
    https://803591

visual_studio_path
    Current value (from the default) = ""
      From //build/config/win/visual_studio_version.gni:9

    Path to Visual Studio. If empty, the default is used which is to use the
    automatic toolchain in depot_tools. If set, you must also set the
    visual_studio_version and wdk_path.

visual_studio_version
    Current value (from the default) = ""
      From //build/config/win/visual_studio_version.gni:13

    Version of Visual Studio pointed to by the visual_studio_path.
    Currently always "2015".

wdk_path
    Current value (from the default) = ""
      From //build/config/win/visual_studio_version.gni:17

    Directory of the Windows driver kit. If visual_studio_path is empty, this
    will be auto-filled.

win_console_app
    Current value (from the default) = false
      From //build/config/win/console_app.gni:12

    If true, builds as a console app (rather than a windowed app), which allows
    logging to be printed to the user. This will cause a terminal window to pop
    up when the executable is not run from the command line, so should only be
    used for development. Only has an effect on Windows builds.

win_linker_timing
    Current value (from the default) = false
      From //build/config/win/BUILD.gn:24

    Turn this on to have the linker output extra timing information.

windows_sdk_path
    Current value (from the default) = "C:\Program Files (x86)\Windows Kits\10"
      From //build/config/win/visual_studio_version.gni:22

    Full path to the Windows SDK, not including a backslash at the end.
    This value is the default location, override if you have a different
    installation location.

