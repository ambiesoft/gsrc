# import("//build/config/jumbo.gni")
import("//build/config/ui.gni")
import("//build/config/win/console_app.gni")
import("//testing/test.gni")
import("//mojo/public/tools/bindings/mojom.gni")

executable("mymain") {
   deps = [
      "//base",
    ]
  sources = [
    "mymain.cc",
  ]
}
executable("my_hello_world") {
   deps = [
      "//base",
    ]
  sources = [
    "my_hello_world.cc",
  ]
}
executable("my_message_loop") {
   deps = [
      "//base",
    ]
  sources = [
    "my_message_loop.cc",
  ]
}
executable("my_callbacks") {
   deps = [
      "//base",
    ]
  sources = [
    "my_callbacks.cc",
  ]
}

executable("my_aura_demo") {
  output_name = "my_aura_demo"
  testonly = true

  sources = [
    "my_aura_demo/demo_main.cc",
  ]

  deps = [
    "//ui/aura",
    "//ui/aura:test_support",
    "//base",
    "//base:i18n",
    "//build/win:default_exe_manifest",
    "//components/viz/host",
    "//components/viz/service",
    "//skia",
    "//third_party/icu",
    "//ui/base",
    "//ui/base/ime/init",
    "//ui/compositor",
    "//ui/compositor:test_support",
    "//ui/display",
    "//ui/events",
    "//ui/gfx",
    "//ui/gfx/geometry",
    "//ui/gl",
    "//ui/gl/init",
#    "//mojo/public/cpp/system",
    "//mojo/core/embedder",
  ]

  if (use_x11) {
    deps += [ "//ui/gfx/x" ]
  }
}

executable("my_views_examples_exe") {
  testonly = true

  sources = [
    "my_views_examples_exe/my_examples_main.cc",
  ]

  deps = [
    "//ui/views/examples:views_examples_lib",
    "//base",
    "//base:i18n",
    "//base/test:test_support",
    "//build/win:default_exe_manifest",
    "//components/viz/host",
    "//components/viz/service",
    "//ui/base",
    "//ui/base/ime/init",
    "//ui/compositor",
    "//ui/compositor:test_support",
    "//ui/gfx",
    "//ui/gl",
    "//ui/gl/init",
    "//ui/resources:ui_test_pak",
    "//ui/views",
    "//ui/views:test_support",
  ]

  if (use_aura) {
    deps += [
      "//ui/aura",
      "//ui/wm",
    ]
  }
  if (use_x11) {
    deps += [ "//ui/gfx/x" ]
  }
}
executable("my_views_examples_with_content_exe") {
  testonly = true

  sources = [
    "my_views_examples_exe/my_examples_with_content_main_exe.cc",
  ]

  defines = [ "VIEWS_EXAMPLES_WITH_CONTENT_IMPLEMENTATION" ]

  deps = [
    "//ui/views/examples:copy_content_resources",
    "//ui/views/examples:views_examples_with_content_lib",
    "//base",
    "//build/win:default_exe_manifest",
    "//content",
    "//content:sandbox_helper_win",
    "//sandbox",
    "//ui/views_content_client",
  ]

  if (is_win) {
    configs += [ "//build/config/win:windowed" ]
    configs -= [ "//build/config/win:console" ]
  }
}
executable("my_sequence") {
   deps = [
      "//base",
    ]
  sources = [
    "my_sequence.cc",
  ]
}
executable("my_threadandmessageloop") {
   deps = [
      "//base",
    ]
  sources = [
    "my_threadandmessageloop.cc",
  ]
}

if (is_win) {
  test("my_sandbox_poc") {
    sources = [
      "sandbox_poc/main_ui_window.cc",
      "sandbox_poc/main_ui_window.h",
      "sandbox_poc/resource.h",
      "sandbox_poc/sandbox.cc",
      "sandbox_poc/sandbox.h",
      "sandbox_poc/sandbox.rc",
    ]

    configs -= [ "//build/config/win:console" ]
    configs += [ "//build/config/win:windowed" ]

    libs = [ "comctl32.lib" ]

    deps = [
      "//sandbox/win:pocdll",
      "//sandbox/win:sandbox",
    ]
  }
}

executable("my_frob")
{
  deps = [
    "my_frob/public/mojom",
    "//mojo/core/embedder",
  ]
  sources = [
    "my_frob/frobinator_impl.cc",
  ]
}

executable("my_mojo_sample")
{
  deps = [
    "//mojo/core/embedder",
  ]
  sources = [
    "my_mojo_sample.cc",
  ]
}



executable("my_simple_views") {
  testonly = true

  sources = [
    "my_simple_views/main.cc",
    "my_simple_views/my_examples_window.cc",
    "my_simple_views/my_examples_window.h",
    "my_simple_views/my_example_base.cc",
    "my_simple_views/my_example_base.h",
    "my_simple_views/my_label_example.cc",
    "my_simple_views/my_label_example.h",
    "my_simple_views/my_example_combobox_model.cc",
    "my_simple_views/my_example_combobox_model.h",
  ]

  deps = [
    "//ui/views/examples:views_examples_lib",
    "//base",
    "//base:i18n",
    "//base/test:test_support",
    "//build/win:default_exe_manifest",
    "//components/viz/host",
    "//components/viz/service",
    "//ui/base",
    "//ui/base/ime/init",
    "//ui/compositor",
    "//ui/compositor:test_support",
    "//ui/gfx",
    "//ui/gl",
    "//ui/gl/init",
    "//ui/resources:ui_test_pak",
    "//ui/views",
    "//ui/views:test_support",
  ]

  if (win_console_app) {
    defines += [ "WIN_CONSOLE_APP" ]
  } else if(is_win) {
    # Set /SUBSYSTEM:WINDOWS unless a console build has been requested.
    configs -= [ "//build/config/win:console" ]
    configs += [ "//build/config/win:windowed" ]
  }

  if (use_aura) {
    deps += [
      "//ui/aura",
      "//ui/wm",
    ]
  }
  if (use_x11) {
    deps += [ "//ui/gfx/x" ]
  }
}




executable("my_mojom_main") {
   deps = [
      "//base",
      "//mojo/core/embedder",
      "my_mojo_db/public/mojom",
  ]
  sources = [
    "my_mojom_main/my_mojom_main.cc",
  ]
}