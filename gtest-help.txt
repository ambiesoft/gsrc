This program contains tests written using Google Test. You can use the
following command line flags to control its behavior:

Test Selection:
  --gtest_list_tests
      List the names of all tests instead of running them. The name of
      TEST(Foo, Bar) is "Foo.Bar".
  --gtest_filter=POSTIVE_PATTERNS[-NEGATIVE_PATTERNS]
      Run only the tests whose name matches one of the positive patterns but
      none of the negative patterns. '?' matches any single character; '*'
      matches any substring; ':' separates two patterns.
  --gtest_also_run_disabled_tests
      Run all disabled tests too.

Test Execution:
  --gtest_repeat=[COUNT]
      Run the tests repeatedly; use a negative count to repeat forever.
  --gtest_shuffle
      Randomize tests' orders on every iteration.
  --gtest_random_seed=[NUMBER]
      Random number seed to use for shuffling test orders (between 1 and
      99999, or 0 to use a seed based on the current time).

Test Output:
  --gtest_color=(yes|no|auto)
      Enable/disable colored output. The default is auto.
  --gtest_print_time=0
      Don't print the elapsed time of each test.
  --gtest_output=(json|xml)[:DIRECTORY_PATH\|:FILE_PATH]
      Generate a JSON or XML report in the given directory or with the given
      file name. FILE_PATH defaults to test_details.xml.

Assertion Behavior:
  --gtest_break_on_failure
      Turn assertion failures into debugger break-points.
  --gtest_throw_on_failure
      Turn assertion failures into C++ exceptions for use by an external
      test framework.
  --gtest_catch_exceptions=0
      Do not report exceptions as test failures. Instead, allow them
      to crash the program or throw a pop-up (on Windows).

Except for --gtest_list_tests, you can alternatively set the corresponding
environment variable of a flag (all letters in upper-case). For example, to
disable colored text output, you can either specify --gtest_color=no or set
the GTEST_COLOR environment variable to no.

For more information, please read the Google Test documentation at
https://github.com/google/googletest/. If you find a bug in Google Test
(not one in your own code or tests), please report it to
<googletestframework@googlegroups.com>.
Runs tests using the gtest framework, each batch of tests being
run in their own process. Supported command-line flags:

 Common flags:
  --gtest_filter=...
    Runs a subset of tests (see --gtest_help for more info).

  --help
    Shows this message.

  --gtest_help
    Shows the gtest help message.

  --test-launcher-jobs=N
    Sets the number of parallel test jobs to N.

  --single-process-tests
    Runs the tests and the launcher in the same process. Useful
    for debugging a specific test in a debugger.

 Other flags:
  --test-launcher-filter-file=PATH
    Like --gtest_filter, but read the test filter from PATH.
    One pattern per line; lines starting with '-' are exclusions.
    See also //testing/buildbot/filters/README.md file.

  --test-launcher-batch-limit=N
    Sets the limit of test batch to run in a single process to N.

  --test-launcher-debug-launcher
    Disables autodetection of debuggers and similar tools,
    making it possible to use them to debug launcher itself.

  --test-launcher-retry-limit=N
    Sets the limit of test retries on failures to N.

  --test-launcher-summary-output=PATH
    Saves a JSON machine-readable summary of the run.

  --test-launcher-print-test-stdio=auto|always|never
    Controls when full test output is printed.
    auto means to print it when the test failed.

  --test-launcher-test-part-results-limit=N
    Sets the limit of failed EXPECT/ASSERT entries in the xml and
    JSON outputs per test to N (default N=10). Negative value 
    will disable this limit.

  --test-launcher-total-shards=N
    Sets the total number of shards to N.

  --test-launcher-shard-index=N
    Sets the shard index to run to N (from 0 to TOTAL - 1).
